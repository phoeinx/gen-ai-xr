services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
    image: ar-gen/frontend:prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - BACKEND_URL=http://backend:8000
      - WHISPER_URL=http://whisper:9000
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - backend
      - whisper
    networks:
      - ar-gen-network
    healthcheck:
      test: ["CMD", "sh", "-c", "wget -qO- http://localhost:80/ >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8000"
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    volumes:
      - ./backend/models:/app/models
      - ./backend/app:/app/app
    networks:
      - ar-gen-network
    healthcheck:
      test: ["CMD", "sh", "-c", "wget -qO- http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

  whisper:
    build:
      context: ./whisper
      dockerfile: Dockerfile
    expose:
      - "9000"
    restart: unless-stopped
    environment:
      - WHISPER_MODEL=base
      - WHISPER_DEVICE=auto
      - WHISPER_HOST=0.0.0.0
      - WHISPER_PORT=9000
    volumes:
      - ./whisper:/app
    networks:
      - ar-gen-network
    healthcheck:
      test: ["CMD", "sh", "-c", "wget -qO- http://localhost:9000/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  caddy_data:
  caddy_config:

networks:
  ar-gen-network:
    driver: bridge
